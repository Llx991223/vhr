<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qyd.vhr.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.qyd.vhr.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="idCard" jdbcType="CHAR" property="idCard" />
    <result column="wedlock" jdbcType="CHAR" property="wedlock" />
    <result column="nationId" jdbcType="INTEGER" property="nationId" />
    <result column="nativePlace" jdbcType="VARCHAR" property="nativePlace" />
    <result column="politicId" jdbcType="INTEGER" property="politicId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentId" />
    <result column="jobLevelId" jdbcType="INTEGER" property="jobLevelId" />
    <result column="posId" jdbcType="INTEGER" property="posId" />
    <result column="engageForm" jdbcType="VARCHAR" property="engageForm" />
    <result column="tiptopDegree" jdbcType="CHAR" property="tiptopDegree" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="beginDate" jdbcType="DATE" property="beginDate" />
    <result column="workState" jdbcType="CHAR" property="workState" />
    <result column="workID" jdbcType="CHAR" property="workID" />
    <result column="contractTerm" jdbcType="DOUBLE" property="contractTerm" />
    <result column="conversionTime" jdbcType="DATE" property="conversionTime" />
    <result column="notWorkDate" jdbcType="DATE" property="notWorkDate" />
    <result column="beginContract" jdbcType="DATE" property="beginContract" />
    <result column="endContract" jdbcType="DATE" property="endContract" />
    <result column="workAge" jdbcType="INTEGER" property="workAge" />
  </resultMap>
  <resultMap id="AllEmployeeInfo" type="cn.qyd.vhr.bean.Employee" extends="BaseResultMap">
    <association property="nation" javaType="cn.qyd.vhr.bean.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsStatus" javaType="cn.qyd.vhr.bean.PoliticsStatus">
      <id column="psid" property="id"/>
      <result column="psname" property="name"/>
    </association>
    <association property="department" javaType="cn.qyd.vhr.bean.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>
    <association property="position" javaType="cn.qyd.vhr.bean.Position">
      <id column="posid" property="id"/>
      <result column="posname" property="name"/>
    </association>
    <association property="jobLevel" javaType="cn.qyd.vhr.bean.JobLevel">
      <id column="jlid" property="id"/>
      <result column="jlname" property="name"/>
    </association>
  </resultMap>
  <resultMap id="EmployeeWithSalary" type="cn.qyd.vhr.bean.Employee" extends="BaseResultMap">
    <association property="department" javaType="cn.qyd.vhr.bean.Department">
      <result column="dname" property="name"/>
    </association>
    <association property="salary" javaType="cn.qyd.vhr.bean.Salary">
      <id column="sid" property="id"/>
      <result column="sname" property="name"/>
      <result column="sbasicSalary" property="basicSalary"/>
      <result column="sbonus" property="bonus"/>
      <result column="slunchSalary" property="lunchSalary"/>
      <result column="strafficSalary" property="trafficSalary"/>
      <result column="spensionBase" property="pensionBase"/>
      <result column="spensionPer" property="pensionPer"/>
      <result column="smedicalBase" property="medicalBase"/>
      <result column="smedicalPer" property="medicalPer"/>
      <result column="saccumulationFundBase" property="accumulationFundBase"/>
      <result column="saccumulationFundPer" property="accumulationFundPer"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, 
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
  <select id="maxWorkId" resultType="java.lang.Long">
    select max(workID) from employee
  </select>
  <select id="getEmployeesWithSalary" resultMap="EmployeeWithSalary">
    SELECT e.*,s.id as sid,s.name as sname,s.basicSalary as sbasicSalary,s.bonus as sbonus,s.lunchSalary as slunchSalary,s.trafficSalary as strafficSalary,s.pensionBase as spensionBase,s.pensionPer as spensionPer,s.medicalBase as smedicalBase,s.medicalPer as smedicalPer,s.accumulationFundBase as saccumulationFundBase,s.accumulationFundPer as saccumulationFundPer,d.`name` as dname from employee e left JOIN empsalary es on e.id=es.eid LEFT JOIN salary s on es.sid=s.id LEFT JOIN department d on e.departmentId=d.id
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotals" resultType="java.lang.Long">
    select COUNT(*) from employee e
    <where>
      <if test="employee != null">
        <if test="employee.name != null and employee.name != ''">
          and e.name like concat("%",#{employee.name},"%")
        </if>
        <if test="employee.politicId != null">
          and e.politicId= #{employee.politicId}
        </if>
        <if test="employee.nationId != null">
          and e.nationId= #{employee.nationId}
        </if>
        <if test="employee.jobLevelId != null">
          and e.jobLevelId= #{employee.jobLevelId}
        </if>
        <if test="employee.posId != null">
          and e.posId= #{employee.posId}
        </if>
        <if test="employee.engageForm != null  and employee.engageForm != ''">
          and e.engageForm= #{employee.engageForm}
        </if>
        <if test="employee.departmentId != null">
          and e.departmentId= #{employee.departmentId}
        </if>
      </if>
      <if test="b2eDate != null">
        and e.beginDate between #{b2eDate[0]} and #{b2eDate[1]}
      </if>
    </where>
  </select>
  <select id="getEmployeeById" resultMap="AllEmployeeInfo">
    select e.*,n.id as nid,n.`name` as nname,
    ps.id as psid,ps.`name` as psname,
    d.id as did,d.`name` as dname,
    pos.id as posId,pos.`name` as posname,
    jl.id as jlid,jl.`name` as jlname
    from employee e,nation n,politicsstatus ps,department d,position pos,joblevel jl
    where e.nationId=n.id and e.politicId=ps.id and e.departmentId=d.id and e.posId=pos.id
    and e.jobLevelId=jl.id and e.id=#{id}
  </select>
  <select id="getEmployeesByPage" resultMap="AllEmployeeInfo">
    select e.*,n.id as nid,n.`name` as nname,
    ps.id as psid,ps.`name` as psname,
    d.id as did,d.`name` as dname,
    pos.id as posId,pos.`name` as posname,
    jl.id as jlid,jl.`name` as jlname
    from employee e,nation n,politicsstatus ps,department d,position pos,joblevel jl
    where e.nationId=n.id and e.politicId=ps.id and e.departmentId=d.id and e.posId=pos.id
    and e.jobLevelId=jl.id
    <if test="employee != null">
      <if test="employee.name != null and employee.name != ''">
        and e.name like concat("%",#{employee.name},"%")
      </if>
      <if test="employee.politicId != null">
        and e.politicId= #{employee.politicId}
      </if>
      <if test="employee.nationId != null">
        and e.nationId= #{employee.nationId}
      </if>
      <if test="employee.jobLevelId != null">
        and e.jobLevelId= #{employee.jobLevelId}
      </if>
      <if test="employee.posId != null">
        and e.posId= #{employee.posId}
      </if>
      <if test="employee.engageForm != null and employee.engageForm != ''">
        and e.engageForm= #{employee.engageForm}
      </if>
      <if test="employee.departmentId != null">
        and e.departmentId= #{employee.departmentId}
      </if>
      <if test="b2eDate != null">
        and e.beginDate between #{b2eDate[0]} and #{b2eDate[1]}
      </if>
    </if>
    ORDER BY e.id
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="updateEmployeeSalaryById">
    REPLACE into empsalary(eid,sid) VALUES(#{eid},#{sid})
  </insert>
  <insert id="batchInsert">
    insert into employee ( name, gender,
      birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email,
      phone, address, departmentId,
      jobLevelId, posId, engageForm,
      tiptopDegree, specialty, school,
      beginDate, workState, workID,
      contractTerm, conversionTime, notWorkDate,
      beginContract, endContract, workAge
      ) values
      <foreach collection="employees" item="emp" separator=",">
        ( #{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
        #{emp.birthday,jdbcType=DATE}, #{emp.idCard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR}, #{emp.nationId,jdbcType=INTEGER},
        #{emp.nativePlace,jdbcType=VARCHAR}, #{emp.politicId,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
        #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentId,jdbcType=INTEGER},
        #{emp.jobLevelId,jdbcType=INTEGER}, #{emp.posId,jdbcType=INTEGER}, #{emp.engageForm,jdbcType=VARCHAR},
        #{emp.tiptopDegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
        #{emp.beginDate,jdbcType=DATE}, #{emp.workState,jdbcType=CHAR}, #{emp.workID,jdbcType=CHAR},
        #{emp.contractTerm,jdbcType=DOUBLE}, #{emp.conversionTime,jdbcType=DATE}, #{emp.notWorkDate,jdbcType=DATE},
        #{emp.beginContract,jdbcType=DATE}, #{emp.endContract,jdbcType=DATE}, #{emp.workAge,jdbcType=INTEGER}
        )
      </foreach>
  </insert>
  <insert id="insert" parameterType="cn.qyd.vhr.bean.Employee">
    insert into employee (id, name, gender, 
      birthday, idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER}, 
      #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR}, 
      #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workID,jdbcType=CHAR}, 
      #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notWorkDate,jdbcType=DATE}, 
      #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.qyd.vhr.bean.Employee" useGeneratedKeys="true"
  keyProperty="id">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idCard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationId != null">
        nationId,
      </if>
      <if test="nativePlace != null">
        nativePlace,
      </if>
      <if test="politicId != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentId != null">
        departmentId,
      </if>
      <if test="jobLevelId != null">
        jobLevelId,
      </if>
      <if test="posId != null">
        posId,
      </if>
      <if test="engageForm != null">
        engageForm,
      </if>
      <if test="tiptopDegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="beginDate != null">
        beginDate,
      </if>
      <if test="workState != null">
        workState,
      </if>
      <if test="workID != null">
        workID,
      </if>
      <if test="contractTerm != null">
        contractTerm,
      </if>
      <if test="conversionTime != null">
        conversionTime,
      </if>
      <if test="notWorkDate != null">
        notWorkDate,
      </if>
      <if test="beginContract != null">
        beginContract,
      </if>
      <if test="endContract != null">
        endContract,
      </if>
      <if test="workAge != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationId != null">
        #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null">
        #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null">
        #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null">
        #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null">
        #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null">
        #{tiptopDegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null">
        #{workState,jdbcType=CHAR},
      </if>
      <if test="workID != null">
        #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null">
        #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null">
        #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notWorkDate != null">
        #{notWorkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null">
        #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null">
        #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null">
        #{workAge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qyd.vhr.bean.Employee">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null">
        idCard = #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        wedlock = #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationId != null">
        nationId = #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        nativePlace = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null">
        politicId = #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null">
        jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null">
        posId = #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null">
        engageForm = #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null">
        tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        beginDate = #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null">
        workState = #{workState,jdbcType=CHAR},
      </if>
      <if test="workID != null">
        workID = #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null">
        contractTerm = #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null">
        conversionTime = #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notWorkDate != null">
        notWorkDate = #{notWorkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null">
        beginContract = #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null">
        endContract = #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null">
        workAge = #{workAge,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qyd.vhr.bean.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idCard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationId,jdbcType=INTEGER},
      nativePlace = #{nativePlace,jdbcType=VARCHAR},
      politicId = #{politicId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      posId = #{posId,jdbcType=INTEGER},
      engageForm = #{engageForm,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{beginDate,jdbcType=DATE},
      workState = #{workState,jdbcType=CHAR},
      workID = #{workID,jdbcType=CHAR},
      contractTerm = #{contractTerm,jdbcType=DOUBLE},
      conversionTime = #{conversionTime,jdbcType=DATE},
      notWorkDate = #{notWorkDate,jdbcType=DATE},
      beginContract = #{beginContract,jdbcType=DATE},
      endContract = #{endContract,jdbcType=DATE},
      workAge = #{workAge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>